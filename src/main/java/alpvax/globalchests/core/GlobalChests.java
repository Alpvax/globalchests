package alpvax.globalchests.core;

import alpvax.globalchests.block.BlockGlobalChest;
import alpvax.globalchests.core.proxy.CommonProxy;
import alpvax.globalchests.gui.GlobalChestsGuiHandler;
import alpvax.globalchests.item.ItemSynchedInventory;
import net.minecraft.block.Block;
import net.minecraft.client.resources.I18n;
import net.minecraft.item.Item;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.Metadata;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.relauncher.Side;

@Mod(modid = GlobalChests.MOD_ID, version = GlobalChests.VERSION)
public class GlobalChests
{
	public static final String MOD_ID = "globalchests";
	public static final String VERSION = "@VERSION@";

	@SidedProxy(
			clientSide = "alpvax.globalchests.core.proxy.ClientProxy",
			serverSide = "alpvax.globalchests.core.proxy.CommonProxy")
	public static CommonProxy proxy;

	@Mod.Instance(MOD_ID)
	public static GlobalChests instance;

	@Metadata(MOD_ID)
	public static ModMetadata meta;

	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent e)
	{
		if(e.getSide() == Side.CLIENT)
		{
			meta.name = I18n.format("mod." + MOD_ID + ".name");
			meta.description = I18n.format("mod." + MOD_ID + ".description");
		}
		meta.authorList.add("Alpvax");
		meta.autogenerated = false;

		NetworkRegistry.INSTANCE.registerGuiHandler(instance, new GlobalChestsGuiHandler());

		//new Blocks();
		new Items();

		//MinecraftForge.EVENT_BUS.register(hooks);
	}

	@Mod.EventHandler
	public void init(FMLInitializationEvent event)
	{
		GameRegistry.addRecipe(new GlobalInvResetRecipe());
	}

	public static class Blocks
	{
		public static final Block CHEST;

		private static final Block[] blocks = {CHEST = new BlockGlobalChest().setRegistryName("chest")};

		static
		{
			for(Block block : blocks)
			{
				GameRegistry.register(block);
			}
		}
	}

	public static class Items
	{
		public static final Item BAG;

		private static final Item[] items = {BAG = new ItemSynchedInventory().setUnlocalizedName("bag").setRegistryName("bag")};

		static
		{
			for(Item item : items)
			{
				GameRegistry.register(item);
			}
		}
	}
}
